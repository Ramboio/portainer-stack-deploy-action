name: "Test"

on:
  workflow_dispatch:
  schedule:
    - cron: "18 18 * * 1,3,5"
  push:
    branches: ["**"]
    paths:
      - "dist/**"
      - "src/**"
      - ".github/workflows/test.yaml"
      - "package*.json"
      - "requirements*.txt"
      - "action.yml"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: "Test"
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4

      - name: "Write YAML"
        id: yaml-action
        uses: teunmooij/yaml@v1
        with:
          data: '{"version":"3.8","services":{"alpine":{"image":"alpine","command":"tail -f /dev/null"}}}'
          to-file: "docker-compose.yaml"

      - name: "Test Local Action"
        id: test
        uses: ./
        with:
          token: ${{ secrets.PORTAINER_TOKEN }}
          url: ${{ secrets.PORTAINER_URL }}
          name: test_portainer-stack-deploy
          file: docker-compose.yaml
          type: file
          env_json: '{"TEST": "TRUE"}'
          merge_env: true

      #- name: "Echo Output"
      #  run: |
      #    echo stackID: '${{ steps.test.outputs.stackID }}'
      #    echo swarmID: '${{ steps.test.outputs.swarmID }}'
      #    echo endpointID: '${{ steps.test.outputs.endpointID }}'

      - name: "Verify Outputs"
        run: |
          echo "stackID: '${{ steps.test.outputs.stackID }}'"
          if [ -z '${{ steps.test.outputs.stackID }}' ];then
            echo "Missing output: stackID"
            exit 1
          fi
          echo "swarmID: '${{ steps.test.outputs.swarmID }}'"
          if [ -z '${{ steps.test.outputs.swarmID }}' ];then
            echo "Missing output: swarmID"
            exit 1
          fi
          echo "endpointID: '${{ steps.test.outputs.endpointID }}'"
          if [ -z '${{ steps.test.outputs.endpointID }}' ];then
            echo "Missing output: endpointID"
            exit 1
          fi

      - name: "Schedule Failure Notification"
        if: ${{ failure() && github.event_name == 'schedule' }}
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
